import React, { useState } from 'react';
const App = () => {
 const [formData, setFormData] = useState({
 name: '',
 email: '',
 address: '',
 phone: '',
 dob: '',
 errors: {},
 });
 const handleChange = (e) => {
 const { name, value } = e.target;
 setFormData((prevData) => ({
 ...prevData,
 [name]: value,
 errors: {
 ...prevData.errors,
 [name]: '',
 },
 }));
 };
 const handleSubmit = (e) => {
 e.preventDefault();
 const errors = validateForm();
 if (Object.keys(errors).length > 0) {
 setFormData((prevData) => ({
 ...prevData,
 errors,
 }));
 } else {
 // Form submission logic goes here
 console.log('Form submitted successfully');
 }
 };
 const validateForm = () => {
 const errors = {};
 if (!formData.name) {
 errors.name = 'Name is required';
 } else if (!/^[a-zA-Z\s]+$/.test(formData.name)) {
 errors.name = 'Name should not contain special characters';
 }
 if (!formData.email) {
 errors.email = 'Email is required';
 } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
 errors.email = 'Invalid email address';
 }
 if (!formData.address) {
 errors.address = 'Address is required';
 }
 if (!formData.phone) {
 errors.phone = 'Phone number is required';
 } else if (!/^[1-9]\d{9}$/.test(formData.phone)) {
 errors.phone = 'Phone number should be 10 digits and not start with 0';
 }
 if (!formData.dob) {
 errors.dob = 'Date of Birth is required';
 } else if (!/^\d{2}-\d{2}-\d{4}$/.test(formData.dob)) {
 errors.dob = 'Invalid date format (DD-MM-YYYY)';
 }
 return errors;
 };
 return (
 <div>
 <h1>React Form Validation</h1>
 <form onSubmit={handleSubmit}>
 <div>
 <label>Name:</label>
 <input
 type="text"
 name="name"
 value={formData.name}
 onChange={handleChange}
 />
 {formData.errors.name && <span>{formData.errors.name}</span>}
 </div>
 <div>
 <label>Email:</label>
 <input
 type="text"
 name="email"
 value={formData.email}
 onChange={handleChange}
 />
 {formData.errors.email && <span>{formData.errors.email}</span>}
 </div>
 <div>
 <label>Address:</label>
 <input
 type="text"
 name="address"
 value={formData.address}
 onChange={handleChange}
 />
 {formData.errors.address && <span>{formData.errors.address}</span>}
 </div>
 <div>
 <label>Phone:</label>
 <input
 type="text"
 name="phone"
 value={formData.phone}
 onChange={handleChange}
 />
 {formData.errors.phone && <span>{formData.errors.phone}</span>}
 </div>
 <div>
 <label>Date of Birth:</label>
 <input
 type="text"
 name="dob"
 value={formData.dob}
 onChange={handleChange}
 />
